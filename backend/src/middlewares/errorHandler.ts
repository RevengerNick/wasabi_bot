// src/middlewares/errorHandler.ts

import { Request, Response, NextFunction } from 'express';

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ Error
export interface AppError extends Error {
  status?: number;
}

export const errorHandler = (
  err: AppError,
  req: Request,
  res: Response,
  next: NextFunction // next –Ω—É–∂–µ–Ω, –¥–∞–∂–µ –µ—Å–ª–∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –¥–ª—è —Å–∏–≥–Ω–∞—Ç—É—Ä—ã express
) => {
  console.error('üí• –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:', err);

  // –ï—Å–ª–∏ —É –æ—à–∏–±–∫–∏ –Ω–µ—Ç —Å—Ç–∞—Ç—É—Å–∞, —Å—Ç–∞–≤–∏–º 500 (Internal Server Error)
  const statusCode = err.status || 500;
  const message = err.message || '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞';

  res.status(statusCode).json({
    status: 'error',
    statusCode,
    message,
  });
};