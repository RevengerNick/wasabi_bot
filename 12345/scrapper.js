// scraper.js
const { TelegramClient } = require("telegram");
const { StringSession } = require("telegram/sessions");
const input = require("input");
const fs = require("fs");

// --- –í–ê–®–ò –î–ê–ù–ù–´–ï ---
const apiId = 20707116; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à apiId (—á–∏—Å–ª–æ)
const apiHash = "051390c52e881b566e42d61c7d2d6773"; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à apiHash
const stringSession = new StringSession("1AgAOMTQ5LjE1NC4xNjcuNTEBu5uSizq/0jIvbCOvt5otHMHiOVW7mDqpJfSP1t8E3/tuyyQvB3QuIkygjHvrUbBFZlFUdsgMOYZKcWqrEkXHJd9BS0U7t5YyqcxHjfHtIp77DSM6RMAuJgKUipwbEnQrWFqgDtB6fOFvfZ2D6C7nWBZll8kH8plcYhF/XmfzeFQ4xtlVWhBZp+27CFHsRaymSkvh3g7TG6soGN0IiFcI0d4fN7RbeYsMaUHLr7JJCXDSKrihQAlx/1GYC1aCc5Zyxmt4IgiSameZMzqGO197HTAMznfgHz7KW2LsA2St62U2sKk4MR5ekODN7+GwA2k4MCv1YN5LgeXyaTJLGNaaG5o="); // –û—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –∑–∞–ø—É—Å–∫–∞

// --- –ù–ê–°–¢–†–û–ô–ö–ò –ü–ê–†–°–ï–†–ê ---
const targetBot = "wasabisushi_uzbot"; // @username –±–æ—Ç–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ –ø–∞—Ä—Å–∏–º

const categoryEmojiMap = {
  '–•–æ–ª–æ–¥–Ω—ã–µ –ë–ª—é–¥–∞': 'ü•ò –•–æ–ª–æ–¥–Ω—ã–µ –ë–ª—é–¥–∞',
  '–ñ–∞—Ä–µ–Ω–Ω—ã–µ –†–æ–ª–ª—ã': 'üçò –ñ–∞—Ä–µ–Ω–Ω—ã–µ –†–æ–ª–ª—ã',
  '–ö–∏–º–ø–∞–±': 'üå∏ –ö–∏–º–ø–∞–±',
  '–ì–æ—Ä—è—á–∫–∞': 'üî• –ì–æ—Ä—è—á–∫–∞',
  '–ù–æ–≤–∏–Ω–∫–∏': 'üî• –ù–æ–≤–∏–Ω–∫–∏',
  '–•–ª–µ–±': 'üçû –•–ª–µ–±',
  '–ì—É–Ω–∫–∞–Ω—ã': 'ü•ô –ì—É–Ω–∫–∞–Ω—ã',
  '–û–Ω–∏–≥–∏—Ä–∏': 'üçô –û–Ω–∏–≥–∏—Ä–∏',
  '–ù–∞–ø–∏—Ç–∫–∏': 'ü•§ –ù–∞–ø–∏—Ç–∫–∏',
  '–†–æ–ª–ª—ã': 'ü•¢ –†–æ–ª–ª—ã',
  '–°—É—à–∏': 'üç£ –°—É—à–∏',
  '–°–∞–ª–∞—Ç—ã': 'üçú –°–∞–ª–∞—Ç—ã',
  '–°–µ—Ç—ã': 'üç± –°–µ—Ç—ã',
  '–°–æ—É—Å–∞': 'üßÇ –°–æ—É—Å–∞',
  '–ó–∞–ø–µ—á–µ–Ω–Ω—ã–µ': 'ü•ß –ó–∞–ø–µ—á–µ–Ω–Ω—ã–µ',
  '–ú–∏–Ω–∏ –†–æ–ª–ª—ã': 'ü•¢ –ú–∏–Ω–∏ –†–æ–ª–ª—ã',
};
// –≠—Ç–æ—Ç —Å–ø–∏—Å–æ–∫ –Ω—É–∂–Ω–æ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –≤—Ä—É—á–Ω—É—é, –ø–æ—Å–º–æ—Ç—Ä–µ–≤ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –≤ –±–æ—Ç–µ
const categoriesToParse = Object.keys(categoryEmojiMap);

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–¥–µ—Ä–∂–∫–∏
const sleep = (ms) => new Promise(resolve => setTimeout(resolve, ms));

async function main() {
    if (!fs.existsSync('images')) fs.mkdirSync('images');

    console.log("–ó–∞–ø—É—Å–∫ –∫–ª–∏–µ–Ω—Ç–∞...");
    const client = new TelegramClient(stringSession, apiId, apiHash, {
        connectionRetries: 5,
    });

    await client.start({
        phoneNumber: async () => await input.text("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: "),
        password: async () => await input.text("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å (2FA), –µ—Å–ª–∏ –µ—Å—Ç—å: "),
        phoneCode: async () => await input.text("–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∏–∑ Telegram: "),
        onError: (err) => console.log(err),
    });

    console.log("–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å!");
    if (!stringSession.value) {
        console.log("–í–∞—à–∞ —Å–µ—Å—Å–∏—è (—Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –≤ –∫–æ–¥ –¥–ª—è –±—É–¥—É—â–∏—Ö –∑–∞–ø—É—Å–∫–æ–≤):");
        console.log(client.session.save());
    }

    const allProducts = {};

    // ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è. –í—Å–µ —á—Ç–æ –¥–æ –Ω–µ–≥–æ - –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º.
    let lastProcessedMessageId = 0;

    // –ü–æ–ª—É—á–∞–µ–º —Å–∞–º–æ–µ –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∞—á–∞–ª—å–Ω—É—é —Ç–æ—á–∫—É –æ—Ç—Å—á–µ—Ç–∞
    const initialMessages = await client.getMessages(targetBot, { limit: 1 });
    if (initialMessages.length > 0) {
        lastProcessedMessageId = initialMessages[0].id;
        console.log(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞—á–∞–ª—å–Ω–∞—è —Ç–æ—á–∫–∞ –æ—Ç—Å—á–µ—Ç–∞: ID —Å–æ–æ–±—â–µ–Ω–∏—è ${lastProcessedMessageId}`);
    }

    // –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    for (const categoryName of categoriesToParse) {
        console.log(`\n--- –ü–∞—Ä—Å–∏–Ω–≥ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: ${categoryName} ---`);
        
        const messageToSend = categoryEmojiMap[categoryName];
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—ã
        await client.sendMessage(targetBot, { message: messageToSend });
        await sleep(2000);
        await client.sendMessage(targetBot, { message: "–°–ø–∏—Å–æ–∫ üìã" });
        console.log("–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ '–°–ø–∏—Å–æ–∫ üìã', –æ–∂–∏–¥–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤...");
        await sleep(5000);

        // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        const messages = await client.getMessages(targetBot, { limit: 100 });
        
        // –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –¢–ï–ö–£–©–ï–ô –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        const currentCategoryProducts = [];
        
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ù–û–í–´–• –∫ –°–¢–ê–†–´–ú
        for (const msg of messages) {
            // !!! –ì–õ–ê–í–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï !!!
            // –ï—Å–ª–∏ –º—ã –¥–æ—à–ª–∏ –¥–æ —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ —É–∂–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–ª–∏, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º—Å—è.
            if (msg.id <= lastProcessedMessageId) {
                break;
            }

            if (msg && msg.photo && msg.text) {
                const text = msg.text;
                const lines = text.split('\n').filter(line => line.trim() !== '');

                if (lines.length >= 2 && lines[0].startsWith('–ù–∞–∑–≤–∞–Ω–∏–µ:') && lines[lines.length - 1].startsWith('–¶–µ–Ω–∞:')) {
                    const name = lines[0].replace('–ù–∞–∑–≤–∞–Ω–∏–µ:', '').trim();
                    const priceString = lines[lines.length - 1].replace(/–¶–µ–Ω–∞:|—Å—É–º/g, '').trim();
                    const price = parseInt(priceString.replace(/\s|,00/g, ''), 10);

                    let composition = "";
                    const compStartIndex = lines.findIndex(l => l.startsWith('–°–æ—Å—Ç–∞–≤:'));
                    if (compStartIndex !== -1) {
                        composition = lines.slice(compStartIndex + 1, lines.length - 1).join(', ').trim();
                    }
                    
                    const safeFileName = name.replace(/[\/\?<>\\:\*\|"]/g, '_');
                    const imagePath = `images/${safeFileName}.jpg`;

                    // –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–æ—Ç–æ
                    await client.downloadMedia(msg.photo, { outputFile: imagePath });

                    const product = { name, price, composition, imageUrl: imagePath };
                    currentCategoryProducts.push(product);
                    console.log(`  [+] –ù–∞–π–¥–µ–Ω —Ç–æ–≤–∞—Ä: ${product.name}`);
                }
            }
        }
        
        // –¢–∞–∫ –∫–∞–∫ –º—ã —á–∏—Ç–∞–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –Ω–æ–≤—ã—Ö –∫ —Å—Ç–∞—Ä—ã–º, –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –º–∞—Å—Å–∏–≤,
        // —á—Ç–æ–±—ã –ø—Ä–æ–¥—É–∫—Ç—ã –±—ã–ª–∏ –≤ —Ç–æ–º –ø–æ—Ä—è–¥–∫–µ, –≤ –∫–æ—Ç–æ—Ä–æ–º –∏—Ö –ø—Ä–∏—Å–ª–∞–ª –±–æ—Ç.
        allProducts[categoryName] = currentCategoryProducts.reverse();

        // –û–±–Ω–æ–≤–ª—è–µ–º ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        if (messages.length > 0) {
            lastProcessedMessageId = messages[0].id;
        }

        console.log(`\n--- –ö–∞—Ç–µ–≥–æ—Ä–∏—è "${categoryName}" –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –û–∂–∏–¥–∞–Ω–∏–µ 60 —Å–µ–∫—É–Ω–¥... ---`);
        await sleep(5000); // 60 —Å–µ–∫—É–Ω–¥ –æ–∂–∏–¥–∞–Ω–∏—è
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ –≤ JSON —Ñ–∞–π–ª
    fs.writeFileSync('products.json', JSON.stringify(allProducts, null, 2));
    console.log("\n‚úÖ –í—Å–µ –¥–∞–Ω–Ω—ã–µ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã! –°–º–µ—à–∏–≤–∞–Ω–∏—è –±–æ–ª—å—à–µ –Ω–µ—Ç.");

    await client.disconnect();
}

main();